generator client {
  provider     = "prisma-client-js"
  relationMode = "prisma"
}

datasource db {
  provider = "sqlite"
  // url      = env("DATABASE_URL")
  url      = "file:./dev.db.sqlite"
}

model Todo {
  id          String    @id @default(cuid())
  title       String
  isCompleted Boolean
  deletedAt   DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  subTasks    SubTask[]
  category    Category? @relation(fields: [categoryId], references: [id], onDelete: SetNull)
  categoryId  String?
  pinned      Boolean   @default(false)
  assignedby  User?     @relation(name: "owner", fields: [ownerId], references: [id], onDelete: Cascade)
  assignedTo  User      @relation(name: "employee", fields: [userId], references: [id], onDelete: Cascade)
  ownerId     String?
  userId      String

  @@index([categoryId])
}

model Category {
  id        String           @id @default(cuid())
  name      String
  createdAt DateTime         @default(now())
  updatedAt DateTime         @updatedAt
  todos     Todo[]           @relation
  users     UserCategories[]
}

model SubTask {
  id        String   @id @default(cuid())
  item      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     Todo     @relation(fields: [titleId], references: [id], onDelete: Cascade)
  titleId   String
}

model User {
  id            String           @id @default(cuid())
  createdAt     DateTime         @default(now())
  updatedAt     DateTime         @updatedAt
  email         String           @unique
  name          String
  password      String
  age           Int
  phone         String
  Mytodos       Todo[]           @relation(name: "owner")
  assignedToDos Todo[]           @relation(name: "employee")
  categories    UserCategories[]
  role          Role             @default(USER)
}

model UserCategories {
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     String
  category   Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  categoryId String

  @@id([userId, categoryId])
}

enum Role {
  USER
  ADMIN
}
